// Code generated by protoc-gen-go.
// source: structs.proto
// DO NOT EDIT!

/*
Package structs is a generated protocol buffer package.

It is generated from these files:
	structs.proto

It has these top-level messages:
	Block
	Location
	Reference
*/
package structs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import chord "github.com/ipkg/go-chord"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlockType int32

const (
	BlockType_ROOTBLOCK BlockType = 0
	BlockType_DATABLOCK BlockType = 1
)

var BlockType_name = map[int32]string{
	0: "ROOTBLOCK",
	1: "DATABLOCK",
}
var BlockType_value = map[string]int32{
	"ROOTBLOCK": 0,
	"DATABLOCK": 1,
}

func (x BlockType) String() string {
	return proto.EnumName(BlockType_name, int32(x))
}
func (BlockType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Block struct {
	Type BlockType `protobuf:"varint,1,opt,name=Type,json=type,enum=structs.BlockType" json:"Type,omitempty"`
	Data []byte    `protobuf:"bytes,2,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Block) GetType() BlockType {
	if m != nil {
		return m.Type
	}
	return BlockType_ROOTBLOCK
}

func (m *Block) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Location struct {
	Id       []byte       `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Priority int32        `protobuf:"varint,2,opt,name=Priority,json=priority" json:"Priority,omitempty"`
	Vnode    *chord.Vnode `protobuf:"bytes,3,opt,name=Vnode,json=vnode" json:"Vnode,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Location) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Location) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Location) GetVnode() *chord.Vnode {
	if m != nil {
		return m.Vnode
	}
	return nil
}

type Reference struct {
	Previous []byte `protobuf:"bytes,1,opt,name=Previous,json=previous,proto3" json:"Previous,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
	Mode     uint32 `protobuf:"varint,3,opt,name=Mode,json=mode" json:"Mode,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=Name,json=name" json:"Name,omitempty"`
	Inline   []byte `protobuf:"bytes,5,opt,name=Inline,json=inline,proto3" json:"Inline,omitempty"`
}

func (m *Reference) Reset()                    { *m = Reference{} }
func (m *Reference) String() string            { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()               {}
func (*Reference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Reference) GetPrevious() []byte {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *Reference) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Reference) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Reference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Reference) GetInline() []byte {
	if m != nil {
		return m.Inline
	}
	return nil
}

func init() {
	proto.RegisterType((*Block)(nil), "structs.Block")
	proto.RegisterType((*Location)(nil), "structs.Location")
	proto.RegisterType((*Reference)(nil), "structs.Reference")
	proto.RegisterEnum("structs.BlockType", BlockType_name, BlockType_value)
}

func init() { proto.RegisterFile("structs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0x1d, 0x76, 0xb8, 0x3d, 0x81, 0x98, 0x1e, 0xcc, 0xc2, 0x69, 0xd9, 0xc1, 0x4c, 0x13,
	0x47, 0x82, 0x7f, 0x01, 0x3f, 0x2e, 0x44, 0x14, 0xd3, 0x10, 0x0f, 0xde, 0xca, 0xf6, 0x84, 0x06,
	0xd6, 0xb7, 0x94, 0x42, 0x42, 0xfc, 0xe7, 0xcd, 0xca, 0xf0, 0xe4, 0xa9, 0xf9, 0xbc, 0xd7, 0xf7,
	0xe9, 0xfb, 0x16, 0xba, 0x7b, 0x6b, 0x0e, 0xb9, 0xdd, 0x67, 0x95, 0x21, 0x4b, 0xfc, 0xa6, 0xc1,
	0x7e, 0xb2, 0x56, 0x76, 0x73, 0x58, 0x65, 0x39, 0x95, 0x03, 0x55, 0x6d, 0xd7, 0x83, 0x35, 0x3d,
	0xe7, 0x1b, 0x32, 0xc5, 0x40, 0xa3, 0x3d, 0x5f, 0x4e, 0x26, 0xe0, 0x8f, 0x77, 0x94, 0x6f, 0xf9,
	0x03, 0xb0, 0xe5, 0xa9, 0xc2, 0xc8, 0x8b, 0xbd, 0xb4, 0x37, 0xe4, 0xd9, 0xc5, 0xe9, 0xba, 0x75,
	0x47, 0x30, 0x7b, 0xaa, 0x90, 0x73, 0x60, 0x53, 0x69, 0x65, 0xd4, 0x8a, 0xbd, 0xb4, 0x23, 0x58,
	0x21, 0xad, 0x4c, 0xbe, 0x20, 0x98, 0x53, 0x2e, 0xad, 0x22, 0xcd, 0x7b, 0xd0, 0x9a, 0x15, 0xce,
	0xd2, 0x11, 0x2d, 0x55, 0xf0, 0x3e, 0x04, 0x1f, 0x46, 0x91, 0x51, 0xf6, 0xe4, 0x66, 0x7c, 0x11,
	0x54, 0x0d, 0xf3, 0x04, 0xfc, 0x4f, 0x4d, 0x05, 0x46, 0xd7, 0xb1, 0x97, 0xde, 0x0e, 0x3b, 0x99,
	0xdb, 0x2e, 0x73, 0x35, 0xe1, 0x1f, 0xeb, 0x23, 0xf9, 0x81, 0x50, 0xe0, 0x37, 0x1a, 0xd4, 0x39,
	0x9e, 0x65, 0x78, 0x54, 0x74, 0xd8, 0x37, 0x4f, 0x04, 0x55, 0xc3, 0xff, 0x2d, 0x56, 0xd7, 0xde,
	0x2e, 0xfe, 0xae, 0x60, 0x25, 0x15, 0x2e, 0xc0, 0xbb, 0x2c, 0x31, 0x62, 0xb1, 0x97, 0x86, 0x82,
	0x69, 0x59, 0x22, 0xbf, 0x87, 0xf6, 0x4c, 0xef, 0x94, 0xc6, 0xc8, 0x77, 0xd3, 0x6d, 0xe5, 0xe8,
	0xe9, 0x11, 0xc2, 0xbf, 0xfc, 0xbc, 0x0b, 0xa1, 0x58, 0x2c, 0x96, 0xe3, 0xf9, 0x62, 0xf2, 0x7a,
	0x77, 0x55, 0xe3, 0x74, 0xb4, 0x1c, 0x9d, 0xd1, 0x5b, 0xb5, 0xdd, 0x7f, 0xbe, 0xfc, 0x06, 0x00,
	0x00, 0xff, 0xff, 0x95, 0xd0, 0xa6, 0xc0, 0x8d, 0x01, 0x00, 0x00,
}
